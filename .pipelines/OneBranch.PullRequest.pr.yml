name: $(Date:yyyyMMdd)$(Rev:.r)-pr
parameters: []
trigger: none
variables:
  LinuxContainerImage: mcr.microsoft.com/onebranch/cbl-mariner/build:2.0
  DEBIAN_FRONTEND: noninteractive
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  ComponentDetection.Timeout: 1200
  DisableGoCliScan: true
resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main
extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates
  parameters:
    globalSdl:
      policheck:
        break: true
      tsa:
        enabled: false
    stages:
      - stage: build
        jobs:
          - job: build_1
            pool:
              type: docker
              os: linux
            variables:
              ob_git_checkout: true
            steps:
              - task: onebranch.pipeline.imagebuildinfo@1
                continueOnError: true
                displayName: Build symphony-api
                inputs:
                  repositoryName: symphony-api
                  dockerFileRelPath: api/Dockerfile
                  dockerFileContextPath: ./
                  saveImageToPath: symphony-api.tar
                  buildkit: 1
                  enable_network: true
                  enable_cache: false
                  arguments: ' --build-arg VSS_NUGET_EXTERNAL_FEED_ENDPOINTS --build-arg VSS_NUGET_URI_PREFIXES --build-arg VSS_NUGET_ACCESSTOKEN'
                  build_tag: $(Build.BuildNumber)
          - job: build_2
            pool:
              type: docker
              os: linux
            variables:
              ob_git_checkout: true
            steps:
              - task: onebranch.pipeline.imagebuildinfo@1
                continueOnError: true
                displayName: Build symphony-k8s
                inputs:
                  repositoryName: symphony-k8s
                  dockerFileRelPath: k8s/Dockerfile
                  dockerFileContextPath: ./
                  saveImageToPath: symphony-k8s.tar
                  buildkit: 1
                  enable_network: true
                  enable_cache: false
                  arguments: ' --build-arg VSS_NUGET_EXTERNAL_FEED_ENDPOINTS --build-arg VSS_NUGET_URI_PREFIXES --build-arg VSS_NUGET_ACCESSTOKEN'
                  build_tag: $(Build.BuildNumber)
schedules: []
