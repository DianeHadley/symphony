apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: symphony-k8s-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: symphony-k8s-system/symphony-k8s-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.1
  name: instances.symphony.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: symphony-k8s-webhook-service
          namespace: symphony-k8s-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: symphony.microsoft.com
  names:
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.properties.status
      name: Status
      type: string
    - jsonPath: .status.properties.targets
      name: Targets
      type: string
    - jsonPath: .status.properties.deployed
      name: Deployed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the instances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              displayName:
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              optOutReconciliation:
                type: boolean
              parameters:
                additionalProperties:
                  type: string
                type: object
              pipelines:
                items:
                  properties:
                    name:
                      type: string
                    parameters:
                      additionalProperties:
                        type: string
                      type: object
                    skill:
                      type: string
                  required:
                  - name
                  - skill
                  type: object
                type: array
              scope:
                type: string
              solution:
                type: string
              target:
                properties:
                  name:
                    type: string
                  selector:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              topologies:
                items:
                  properties:
                    bindings:
                      items:
                        properties:
                          config:
                            additionalProperties:
                              type: string
                            type: object
                          provider:
                            type: string
                          role:
                            type: string
                        required:
                        - provider
                        - role
                        type: object
                      type: array
                    device:
                      type: string
                    selector:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: array
              version:
                type: string
              versions:
                items:
                  properties:
                    percentage:
                      type: integer
                    solution:
                      type: string
                  required:
                  - percentage
                  - solution
                  type: object
                type: array
            required:
            - solution
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance
            properties:
              lastModified:
                format: date-time
                type: string
              properties:
                additionalProperties:
                  type: string
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
              provisioningStatus:
                description: ProvisioningStatus defines the state of the ARM resource
                  for long running operations
                properties:
                  error:
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                    type: object
                  failureCause:
                    type: string
                  logErrors:
                    type: boolean
                  operationId:
                    type: string
                  output:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    type: string
                required:
                - operationId
                - status
                type: object
            required:
            - provisioningStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: symphony-k8s-system/symphony-k8s-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.1
  name: solutions.symphony.microsoft.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: symphony-k8s-webhook-service
          namespace: symphony-k8s-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: symphony.microsoft.com
  names:
    kind: Solution
    listKind: SolutionList
    plural: solutions
    singular: solution
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Solution is the Schema for the solutions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SolutionSpec defines the desired state of Solution
            properties:
              components:
                items:
                  properties:
                    constraints:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          qualifier:
                            type: string
                          value:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        type: object
                      type: array
                    dependencies:
                      items:
                        type: string
                      type: array
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    properties:
                      x-kubernetes-preserve-unknown-fields: true
                    routes:
                      items:
                        properties:
                          filters:
                            items:
                              properties:
                                direction:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type:
                                  type: string
                              required:
                              - direction
                              - type
                              type: object
                            type: array
                          properties:
                            additionalProperties:
                              type: string
                            type: object
                          route:
                            type: string
                          type:
                            type: string
                        required:
                        - route
                        - type
                        type: object
                      type: array
                    skills:
                      items:
                        type: string
                      type: array
                    type:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              displayName:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              metadata:
                additionalProperties:
                  type: string
                type: object
              version:
                type: string
            type: object
          status:
            description: SolutionStatus defines the observed state of Solution
            properties:
              properties:
                additionalProperties:
                  type: string
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: targets.symphony.microsoft.com
spec:
  group: symphony.microsoft.com
  names:
    kind: Target
    listKind: TargetList
    plural: targets
    singular: target
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.properties.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Target is the Schema for the targets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TargetSpec defines the desired state of Target
            properties:
              components:
                items:
                  properties:
                    constraints:
                      items:
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                          qualifier:
                            type: string
                          value:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        type: object
                      type: array
                    dependencies:
                      items:
                        type: string
                      type: array
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    properties:
                      x-kubernetes-preserve-unknown-fields: true
                    routes:
                      items:
                        properties:
                          filters:
                            items:
                              properties:
                                direction:
                                  type: string
                                parameters:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type:
                                  type: string
                              required:
                              - direction
                              - type
                              type: object
                            type: array
                          properties:
                            additionalProperties:
                              type: string
                            type: object
                          route:
                            type: string
                          type:
                            type: string
                        required:
                        - route
                        - type
                        type: object
                      type: array
                    skills:
                      items:
                        type: string
                      type: array
                    type:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              constraints:
                items:
                  properties:
                    key:
                      type: string
                    operator:
                      type: string
                    qualifier:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - key
                  type: object
                type: array
              displayName:
                type: string
              forceRedeploy:
                type: boolean
              metadata:
                additionalProperties:
                  type: string
                type: object
              properties:
                additionalProperties:
                  type: string
                type: object
              scope:
                type: string
              topologies:
                items:
                  properties:
                    bindings:
                      items:
                        properties:
                          config:
                            additionalProperties:
                              type: string
                            type: object
                          provider:
                            type: string
                          role:
                            type: string
                        required:
                        - provider
                        - role
                        type: object
                      type: array
                    device:
                      type: string
                    selector:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                type: array
              version:
                type: string
            type: object
          status:
            description: TargetStatus defines the observed state of Target
            properties:
              lastModified:
                format: date-time
                type: string
              properties:
                additionalProperties:
                  type: string
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
              provisioningStatus:
                description: ProvisioningStatus defines the state of the ARM resource
                  for long running operations
                properties:
                  error:
                    properties:
                      code:
                        type: string
                      message:
                        type: string
                    type: object
                  failureCause:
                    type: string
                  logErrors:
                    type: boolean
                  operationId:
                    type: string
                  output:
                    additionalProperties:
                      type: string
                    type: object
                  status:
                    type: string
                required:
                - operationId
                - status
                type: object
            required:
            - provisioningStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: symphony-k8s-controller-manager
  namespace: symphony-k8s-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: symphony-k8s-leader-election-role
  namespace: symphony-k8s-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: symphony-k8s-manager-role
rules:
- apiGroups:
  - ai.symphony
  resources:
  - models
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.symphony
  resources:
  - models/finalizers
  verbs:
  - update
- apiGroups:
  - ai.symphony
  resources:
  - models/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skillpackages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.symphony
  resources:
  - skillpackages/finalizers
  verbs:
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skillpackages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skills
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ai.symphony
  resources:
  - skills/finalizers
  verbs:
  - update
- apiGroups:
  - ai.symphony
  resources:
  - skills/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - devices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fabric.symphony
  resources:
  - devices/finalizers
  verbs:
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - devices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - targets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - fabric.symphony
  resources:
  - targets/finalizers
  verbs:
  - update
- apiGroups:
  - fabric.symphony
  resources:
  - targets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - campaigns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - campaigns/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - campaigns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - instances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - instances/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - instances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - solution.symphony
  resources:
  - solutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - solution.symphony
  resources:
  - solutions/finalizers
  verbs:
  - update
- apiGroups:
  - solution.symphony
  resources:
  - solutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - symphony.microsoft.com
  resources:
  - instances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - symphony.microsoft.com
  resources:
  - instances/finalizers
  verbs:
  - update
- apiGroups:
  - symphony.microsoft.com
  resources:
  - instances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - symphony.microsoft.com
  resources:
  - solutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - symphony.microsoft.com
  resources:
  - solutions/finalizers
  verbs:
  - update
- apiGroups:
  - symphony.microsoft.com
  resources:
  - solutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - symphony.microsoft.com
  resources:
  - targets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - symphony.microsoft.com
  resources:
  - targets/finalizers
  verbs:
  - update
- apiGroups:
  - symphony.microsoft.com
  resources:
  - targets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: symphony-k8s-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: symphony-k8s-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: symphony-k8s-leader-election-rolebinding
  namespace: symphony-k8s-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: symphony-k8s-leader-election-role
subjects:
- kind: ServiceAccount
  name: symphony-k8s-controller-manager
  namespace: symphony-k8s-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: symphony-k8s-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: symphony-k8s-manager-role
subjects:
- kind: ServiceAccount
  name: symphony-k8s-controller-manager
  namespace: symphony-k8s-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: symphony-k8s-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: symphony-k8s-proxy-role
subjects:
- kind: ServiceAccount
  name: symphony-k8s-controller-manager
  namespace: symphony-k8s-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |-
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 33405cb8.symphony
    syncIntervalSeconds: 180
    validationPolicies:
      model:
      - selectorType: properties
        specField: model.project
        type: unique
        message: "there's already a model associated with the Custom Vision project: %s"
      target:
      - selectorType: topologies.bindings
        selectorKey: provider
        selectorValue: providers.target.azure.iotedge
        specField: binding.config.deviceName
        type: unique
        message: "there's already a target associated with the IoT Edge device: %s"
kind: ConfigMap
metadata:
  name: symphony-k8s-manager-config
  namespace: symphony-k8s-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: symphony-k8s-controller-manager-metrics-service
  namespace: symphony-k8s-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: symphony-k8s-webhook-service
  namespace: symphony-k8s-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: symphony-k8s-controller-manager
  namespace: symphony-k8s-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: APP_VERSION
          value: '{{ .Values.symphonyImage.tag }}'
        image: '{{ .Values.symphonyImage.repository }}:{{ .Values.symphonyImage.tag
          }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: symphony-k8s-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: symphony-k8s-serving-cert
  namespace: symphony-k8s-system
spec:
  dnsNames:
  - symphony-k8s-webhook-service.symphony-k8s-system.svc
  - symphony-k8s-webhook-service.symphony-k8s-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: symphony-k8s-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: symphony-k8s-selfsigned-issuer
  namespace: symphony-k8s-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: symphony-k8s-system/symphony-k8s-serving-cert
  name: symphony-k8s-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: symphony-k8s-webhook-service
      namespace: symphony-k8s-system
      path: /mutate-symphony-microsoft-com-v1-instance
  failurePolicy: Fail
  name: minstance.kb.io
  rules:
  - apiGroups:
    - symphony.microsoft.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: symphony-k8s-webhook-service
      namespace: symphony-k8s-system
      path: /mutate-symphony-microsoft-com-v1-solution
  failurePolicy: Fail
  name: msolution.kb.io
  rules:
  - apiGroups:
    - symphony.microsoft.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - solutions
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: symphony-k8s-webhook-service
      namespace: symphony-k8s-system
      path: /mutate-symphony-microsoft-com-v1-target
  failurePolicy: Fail
  name: mtarget.kb.io
  rules:
  - apiGroups:
    - symphony.microsoft.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - targets
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: symphony-k8s-system/symphony-k8s-serving-cert
  name: symphony-k8s-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: symphony-k8s-webhook-service
      namespace: symphony-k8s-system
      path: /validate-symphony-microsoft-com-v1-instance
  failurePolicy: Fail
  name: vinstance.kb.io
  rules:
  - apiGroups:
    - symphony-microsoft-com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: symphony-k8s-webhook-service
      namespace: symphony-k8s-system
      path: /validate-symphony-microsoft-com-v1-solution
  failurePolicy: Fail
  name: vsolution.kb.io
  rules:
  - apiGroups:
    - symphony.microsoft.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - solutions
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: symphony-k8s-webhook-service
      namespace: symphony-k8s-system
      path: /validate-symphony-microsoft-com-v1-target
  failurePolicy: Fail
  name: vtarget.kb.io
  rules:
  - apiGroups:
    - symphony.microsoft.com
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - targets
  sideEffects: None
